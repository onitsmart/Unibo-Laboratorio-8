// <auto-generated />
// This file was generated by R4Mvc.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the r4mvc.json file (i.e. the settings file), save it and run the generator tool again.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo.Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Routing;
using R4Mvc;

namespace Laboratorio8.Web.Areas.Configurazioni.MetaModuli
{
    public partial class MetaModuliController
    {
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected MetaModuliController(Dummy d)
        {
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(IActionResult result)
        {
            var callInfo = result.GetR4ActionResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<IActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(IActionResult result)
        {
            var callInfo = result.GetR4ActionResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<IActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToPage(IActionResult result)
        {
            var callInfo = result.GetR4ActionResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToPage(Task<IActionResult> taskResult)
        {
            return RedirectToPage(taskResult.Result);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToPagePermanent(IActionResult result)
        {
            var callInfo = result.GetR4ActionResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToPagePermanent(Task<IActionResult> taskResult)
        {
            return RedirectToPagePermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult Edit()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult GeneraGravatarUrl()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.GeneraGravatarUrl);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult AggiungiUtenteInCollaborazione()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiUtenteInCollaborazione);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult RimuoviUtenteInCollaborazione()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.RimuoviUtenteInCollaborazione);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult Elimina()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.Elimina);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoDescrizioneMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoDescrizioneMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaDescrizioneMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaDescrizioneMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoMetaGruppoInMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoMetaGruppoInMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult AggiungiMetaGruppoInMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiMetaGruppoInMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult EliminaMetaGruppoInMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.EliminaMetaGruppoInMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoEtichettaMetaGruppo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoEtichettaMetaGruppo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaEtichettaMetaGruppo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaEtichettaMetaGruppo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoMetaCampoInMetaGruppo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoMetaCampoInMetaGruppo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult AggiungiMetaCampoInMetaGruppo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiMetaCampoInMetaGruppo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult EliminaMetaCampoInMetaGruppo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.EliminaMetaCampoInMetaGruppo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoDimensioneMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoDimensioneMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaDimensioneMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaDimensioneMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoEtichettaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoEtichettaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaEtichettaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaEtichettaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoObbligatorietaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoObbligatorietaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaObbligatorietaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaObbligatorietaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoTipologiaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoTipologiaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaTipologiaMetaCampo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaTipologiaMetaCampo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult CercaAggiornamentoTitoloMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoTitoloMetaModulo);
        }

        [NonAction]
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public virtual IActionResult ModificaTitoloMetaModulo()
        {
            return new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaTitoloMetaModulo);
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public MetaModuliController Actions => MVC.Configurazioni.MetaModuli;
        [GeneratedCode("R4Mvc", "1.0")]
        public readonly string Area = "Configurazioni";
        [GeneratedCode("R4Mvc", "1.0")]
        public readonly string Name = "MetaModuli";
        [GeneratedCode("R4Mvc", "1.0")]
        public const string NameConst = "MetaModuli";
        [GeneratedCode("R4Mvc", "1.0")]
        static readonly ActionNamesClass s_ActionNames = new ActionNamesClass();
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames => s_ActionNames;
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string New = "New";
            public readonly string Edit = "Edit";
            public readonly string GeneraGravatarUrl = "GeneraGravatarUrl";
            public readonly string AggiungiUtenteInCollaborazione = "AggiungiUtenteInCollaborazione";
            public readonly string RimuoviUtenteInCollaborazione = "RimuoviUtenteInCollaborazione";
            public readonly string Elimina = "Elimina";
            public readonly string CercaAggiornamentoDescrizioneMetaModulo = "CercaAggiornamentoDescrizioneMetaModulo";
            public readonly string ModificaDescrizioneMetaModulo = "ModificaDescrizioneMetaModulo";
            public readonly string CercaAggiornamentoMetaGruppoInMetaModulo = "CercaAggiornamentoMetaGruppoInMetaModulo";
            public readonly string AggiungiMetaGruppoInMetaModulo = "AggiungiMetaGruppoInMetaModulo";
            public readonly string EliminaMetaGruppoInMetaModulo = "EliminaMetaGruppoInMetaModulo";
            public readonly string CercaAggiornamentoEtichettaMetaGruppo = "CercaAggiornamentoEtichettaMetaGruppo";
            public readonly string ModificaEtichettaMetaGruppo = "ModificaEtichettaMetaGruppo";
            public readonly string CercaAggiornamentoMetaCampoInMetaGruppo = "CercaAggiornamentoMetaCampoInMetaGruppo";
            public readonly string AggiungiMetaCampoInMetaGruppo = "AggiungiMetaCampoInMetaGruppo";
            public readonly string EliminaMetaCampoInMetaGruppo = "EliminaMetaCampoInMetaGruppo";
            public readonly string CercaAggiornamentoDimensioneMetaCampo = "CercaAggiornamentoDimensioneMetaCampo";
            public readonly string ModificaDimensioneMetaCampo = "ModificaDimensioneMetaCampo";
            public readonly string CercaAggiornamentoEtichettaMetaCampo = "CercaAggiornamentoEtichettaMetaCampo";
            public readonly string ModificaEtichettaMetaCampo = "ModificaEtichettaMetaCampo";
            public readonly string CercaAggiornamentoObbligatorietaMetaCampo = "CercaAggiornamentoObbligatorietaMetaCampo";
            public readonly string ModificaObbligatorietaMetaCampo = "ModificaObbligatorietaMetaCampo";
            public readonly string CercaAggiornamentoTipologiaMetaCampo = "CercaAggiornamentoTipologiaMetaCampo";
            public readonly string ModificaTipologiaMetaCampo = "ModificaTipologiaMetaCampo";
            public readonly string CercaAggiornamentoTitoloMetaModulo = "CercaAggiornamentoTitoloMetaModulo";
            public readonly string ModificaTitoloMetaModulo = "ModificaTitoloMetaModulo";
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string New = "New";
            public const string Edit = "Edit";
            public const string GeneraGravatarUrl = "GeneraGravatarUrl";
            public const string AggiungiUtenteInCollaborazione = "AggiungiUtenteInCollaborazione";
            public const string RimuoviUtenteInCollaborazione = "RimuoviUtenteInCollaborazione";
            public const string Elimina = "Elimina";
            public const string CercaAggiornamentoDescrizioneMetaModulo = "CercaAggiornamentoDescrizioneMetaModulo";
            public const string ModificaDescrizioneMetaModulo = "ModificaDescrizioneMetaModulo";
            public const string CercaAggiornamentoMetaGruppoInMetaModulo = "CercaAggiornamentoMetaGruppoInMetaModulo";
            public const string AggiungiMetaGruppoInMetaModulo = "AggiungiMetaGruppoInMetaModulo";
            public const string EliminaMetaGruppoInMetaModulo = "EliminaMetaGruppoInMetaModulo";
            public const string CercaAggiornamentoEtichettaMetaGruppo = "CercaAggiornamentoEtichettaMetaGruppo";
            public const string ModificaEtichettaMetaGruppo = "ModificaEtichettaMetaGruppo";
            public const string CercaAggiornamentoMetaCampoInMetaGruppo = "CercaAggiornamentoMetaCampoInMetaGruppo";
            public const string AggiungiMetaCampoInMetaGruppo = "AggiungiMetaCampoInMetaGruppo";
            public const string EliminaMetaCampoInMetaGruppo = "EliminaMetaCampoInMetaGruppo";
            public const string CercaAggiornamentoDimensioneMetaCampo = "CercaAggiornamentoDimensioneMetaCampo";
            public const string ModificaDimensioneMetaCampo = "ModificaDimensioneMetaCampo";
            public const string CercaAggiornamentoEtichettaMetaCampo = "CercaAggiornamentoEtichettaMetaCampo";
            public const string ModificaEtichettaMetaCampo = "ModificaEtichettaMetaCampo";
            public const string CercaAggiornamentoObbligatorietaMetaCampo = "CercaAggiornamentoObbligatorietaMetaCampo";
            public const string ModificaObbligatorietaMetaCampo = "ModificaObbligatorietaMetaCampo";
            public const string CercaAggiornamentoTipologiaMetaCampo = "CercaAggiornamentoTipologiaMetaCampo";
            public const string ModificaTipologiaMetaCampo = "ModificaTipologiaMetaCampo";
            public const string CercaAggiornamentoTitoloMetaModulo = "CercaAggiornamentoTitoloMetaModulo";
            public const string ModificaTitoloMetaModulo = "ModificaTitoloMetaModulo";
        }

        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames => s_ViewNames;
            public class _ViewNamesClass
            {
            }
        }

        [GeneratedCode("R4Mvc", "1.0")]
        static readonly ViewsClass s_Views = new ViewsClass();
        [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
        public ViewsClass Views => s_Views;
    }

    [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
    public partial class R4MVC_MetaModuliController : Laboratorio8.Web.Areas.Configurazioni.MetaModuli.MetaModuliController
    {
        public R4MVC_MetaModuliController(): base(Dummy.Instance)
        {
        }

        [NonAction]
        partial void IndexOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> Index()
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void NewOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> New()
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.New);
            NewOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void EditOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid? id);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> Edit(System.Guid? id)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditOverride(callInfo, id);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void GeneraGravatarUrlOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, string email);
        [NonAction]
        public override Microsoft.AspNetCore.Mvc.IActionResult GeneraGravatarUrl(string email)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.GeneraGravatarUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            GeneraGravatarUrlOverride(callInfo, email);
            return callInfo;
        }

        [NonAction]
        partial void AggiungiUtenteInCollaborazioneOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiUtenteInCollaborazioneViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> AggiungiUtenteInCollaborazione(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiUtenteInCollaborazioneViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiUtenteInCollaborazione);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AggiungiUtenteInCollaborazioneOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void RimuoviUtenteInCollaborazioneOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.RimuoviUtenteInCollaborazioneViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> RimuoviUtenteInCollaborazione(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.RimuoviUtenteInCollaborazioneViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.RimuoviUtenteInCollaborazione);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RimuoviUtenteInCollaborazioneOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void EliminaOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> Elimina(System.Guid idMetaModulo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.Elimina);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            EliminaOverride(callInfo, idMetaModulo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoDescrizioneMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoDescrizioneMetaModulo(System.Guid idMetaModulo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoDescrizioneMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            CercaAggiornamentoDescrizioneMetaModuloOverride(callInfo, idMetaModulo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaDescrizioneMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaDescrizioneMetaModuloViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaDescrizioneMetaModulo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaDescrizioneMetaModuloViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaDescrizioneMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaDescrizioneMetaModuloOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoMetaGruppoInMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoMetaGruppoInMetaModulo(System.Guid idMetaModulo, int idMetaGruppo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoMetaGruppoInMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            CercaAggiornamentoMetaGruppoInMetaModuloOverride(callInfo, idMetaModulo, idMetaGruppo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void AggiungiMetaGruppoInMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiMetaGruppoInMetaModuloViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> AggiungiMetaGruppoInMetaModulo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiMetaGruppoInMetaModuloViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiMetaGruppoInMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AggiungiMetaGruppoInMetaModuloOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void EliminaMetaGruppoInMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.EliminaMetaGruppoInMetaModuloViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> EliminaMetaGruppoInMetaModulo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.EliminaMetaGruppoInMetaModuloViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.EliminaMetaGruppoInMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EliminaMetaGruppoInMetaModuloOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoEtichettaMetaGruppoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoEtichettaMetaGruppo(System.Guid idMetaModulo, int idMetaGruppo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoEtichettaMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            CercaAggiornamentoEtichettaMetaGruppoOverride(callInfo, idMetaModulo, idMetaGruppo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaEtichettaMetaGruppoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaEtichettaMetaGruppoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaEtichettaMetaGruppo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaEtichettaMetaGruppoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaEtichettaMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaEtichettaMetaGruppoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoMetaCampoInMetaGruppoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoMetaCampoInMetaGruppo(System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoMetaCampoInMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaCampo", idMetaCampo);
            CercaAggiornamentoMetaCampoInMetaGruppoOverride(callInfo, idMetaModulo, idMetaGruppo, idMetaCampo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void AggiungiMetaCampoInMetaGruppoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiMetaCampoInMetaGruppoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> AggiungiMetaCampoInMetaGruppo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.AggiungiMetaCampoInMetaGruppoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.AggiungiMetaCampoInMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AggiungiMetaCampoInMetaGruppoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void EliminaMetaCampoInMetaGruppoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.EliminaMetaCampoInMetaGruppoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> EliminaMetaCampoInMetaGruppo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.EliminaMetaCampoInMetaGruppoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.EliminaMetaCampoInMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EliminaMetaCampoInMetaGruppoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoDimensioneMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoDimensioneMetaCampo(System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoDimensioneMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaCampo", idMetaCampo);
            CercaAggiornamentoDimensioneMetaCampoOverride(callInfo, idMetaModulo, idMetaGruppo, idMetaCampo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaDimensioneMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaDimensioneMetaCampoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaDimensioneMetaCampo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaDimensioneMetaCampoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaDimensioneMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaDimensioneMetaCampoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoEtichettaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoEtichettaMetaCampo(System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoEtichettaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaCampo", idMetaCampo);
            CercaAggiornamentoEtichettaMetaCampoOverride(callInfo, idMetaModulo, idMetaGruppo, idMetaCampo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaEtichettaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaEtichettaMetaCampoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaEtichettaMetaCampo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaEtichettaMetaCampoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaEtichettaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaEtichettaMetaCampoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoObbligatorietaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoObbligatorietaMetaCampo(System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoObbligatorietaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaCampo", idMetaCampo);
            CercaAggiornamentoObbligatorietaMetaCampoOverride(callInfo, idMetaModulo, idMetaGruppo, idMetaCampo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaObbligatorietaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaObbligatorietaMetaCampoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaObbligatorietaMetaCampo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaObbligatorietaMetaCampoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaObbligatorietaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaObbligatorietaMetaCampoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoTipologiaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoTipologiaMetaCampo(System.Guid idMetaModulo, int idMetaGruppo, int idMetaCampo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoTipologiaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaGruppo", idMetaGruppo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaCampo", idMetaCampo);
            CercaAggiornamentoTipologiaMetaCampoOverride(callInfo, idMetaModulo, idMetaGruppo, idMetaCampo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaTipologiaMetaCampoOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaTipologiaMetaCampoViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaTipologiaMetaCampo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaTipologiaMetaCampoViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaTipologiaMetaCampo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaTipologiaMetaCampoOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void CercaAggiornamentoTitoloMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, System.Guid idMetaModulo);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> CercaAggiornamentoTitoloMetaModulo(System.Guid idMetaModulo)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.CercaAggiornamentoTitoloMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idMetaModulo", idMetaModulo);
            CercaAggiornamentoTitoloMetaModuloOverride(callInfo, idMetaModulo);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }

        [NonAction]
        partial void ModificaTitoloMetaModuloOverride(R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult callInfo, Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaTitoloMetaModuloViewModel model);
        [NonAction]
        public override System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ModificaTitoloMetaModulo(Laboratorio8.Web.Areas.Configurazioni.MetaModuli.ModificaTitoloMetaModuloViewModel model)
        {
            var callInfo = new R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(Area, Name, ActionNames.ModificaTitoloMetaModulo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModificaTitoloMetaModuloOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(callInfo);
        }
    }
}
#pragma warning restore 1591, 3008, 3009, 0108
